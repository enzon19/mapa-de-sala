{"version":3,"file":"4-5c0f70e8.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/dados/_page.server.js","../../../.svelte-kit/adapter-node/nodes/4.js"],"sourcesContent":["import { s as supabase } from \"../../../chunks/supabaseClient.js\";\nimport { DateTime } from \"luxon\";\nimport { a as getAttendancesAndAbsences, c as countAttendancesAndAbsences } from \"../../../chunks/getStats.js\";\nasync function load({ params }) {\n  const classroomMapAllData = (await supabase.from(\"classroomMap\").select(\"*\")).data;\n  const studentsData = (await supabase.from(\"students\").select(\"id,name,left,late\")).data;\n  const attendancesAndAbsencesWithStudentData = studentsData.map((student) => getAttendancesAndAbsencesFixedAndWithStudentData(classroomMapAllData, student));\n  return { attendancesAndAbsencesWithStudentData };\n}\nfunction getAttendancesAndAbsencesFixedAndWithStudentData(classroomMapAllData, student) {\n  let { attendances, absences } = getAttendancesAndAbsences(classroomMapAllData, student.id);\n  const firstAttendance = attendances[0];\n  const firstAttendanceAsDateTime = DateTime.fromISO(firstAttendance);\n  const lastAttendance = attendances.at(-1);\n  const lastAttendanceAsDateTime = DateTime.fromISO(lastAttendance);\n  if (student.left)\n    absences = absences.filter((date) => DateTime.fromISO(date) <= lastAttendanceAsDateTime);\n  if (student.late)\n    absences = absences.filter((date) => DateTime.fromISO(date) >= firstAttendanceAsDateTime);\n  return { ...student, ...countAttendancesAndAbsences(attendances, absences) };\n}\nexport {\n  load\n};\n","import * as server from '../entries/pages/dados/_page.server.js';\n\nexport const index = 4;\nexport const component = async () => (await import('../entries/pages/dados/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/dados/+page.server.js\";\nexport const imports = [\"_app/immutable/nodes/4.c4e2e1f2.js\",\"_app/immutable/chunks/index.c02989e7.js\"];\nexport const stylesheets = [];\nexport const fonts = [];\n"],"names":[],"mappings":";;;;;AAGA,eAAe,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE;AAChC,EAAE,MAAM,mBAAmB,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;AACrF,EAAE,MAAM,YAAY,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC;AAC1F,EAAE,MAAM,qCAAqC,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,gDAAgD,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC,CAAC;AAC9J,EAAE,OAAO,EAAE,qCAAqC,EAAE,CAAC;AACnD,CAAC;AACD,SAAS,gDAAgD,CAAC,mBAAmB,EAAE,OAAO,EAAE;AACxF,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,yBAAyB,CAAC,mBAAmB,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;AAC7F,EAAE,MAAM,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AACzC,EAAE,MAAM,yBAAyB,GAAG,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AACtE,EAAE,MAAM,cAAc,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,EAAE,MAAM,wBAAwB,GAAG,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACpE,EAAE,IAAI,OAAO,CAAC,IAAI;AAClB,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,wBAAwB,CAAC,CAAC;AAC7F,EAAE,IAAI,OAAO,CAAC,IAAI;AAClB,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,yBAAyB,CAAC,CAAC;AAC9F,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,GAAG,2BAA2B,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,CAAC;AAC/E;;;;;;;AClBY,MAAC,KAAK,GAAG,EAAE;AACX,MAAC,SAAS,GAAG,YAAY,CAAC,MAAM,OAAO,4BAAwC,CAAC,EAAE,QAAQ;AAE1F,MAAC,SAAS,GAAG,mCAAmC;AAChD,MAAC,OAAO,GAAG,CAAC,oCAAoC,CAAC,yCAAyC,EAAE;AAC5F,MAAC,WAAW,GAAG,GAAG;AAClB,MAAC,KAAK,GAAG;;;;"}